import sha256 from "sha256";
import { UUID } from "./uuid.js";

const xUserAgent = UUID();

export const HttpClient = {
  MOBILE: "mobile",
  WEB_MOBILE: "web-mobile",
  WEB: "web",
  SERVER: "server",
};

export const HttpMethod = {
  GET: "get",
  POST: "post",
  PUT: "put",
  DELETE: "delete",
  PATCH: "patch",
  DEFAULT: "get",
};

const AUTH_TOKEN_PREFIX = "Bearer ";

export const createRequest = (baseURL, url, method = "get", requestFrom, token = null, data = null, timeout = null, onUploadProgress = null, onDownloadProgress = null) => {
  let headers = {
    "x-user-agent": xUserAgent,
  };

  let request = {
    baseURL: baseURL,
    headers: headers,
    method,
    url,
  };

  if (token) {
    request.headers.authorization = AUTH_TOKEN_PREFIX + token;
  }
  let requestHash = sha256(JSON.stringify(request));

  request.headers["x-hash"] = requestHash;
  request.headers["x-request-from"] = requestFrom;

  if (data) {
    request.data = data;
  }
  if (timeout) {
    request.timeout = timeout;
  }
  if (onUploadProgress) {
    request.onUploadProgress = onUploadProgress;
  }
  if (onDownloadProgress) {
    request.onDownloadProgress = onDownloadProgress;
  }

  return request;
};
